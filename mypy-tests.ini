# TODO: explain why we have a different mypy setup for test code.
#
# Every setting that differs from the main config mypy.ini must be justified.
# To compare, use:
#
#   diff --color=always -u mypy.ini mypy-tests.ini
#

[mypy]
# Globals
python_version = 3.8

# Strict typing options

mypy_path = $MYPY_CONFIG_FILE_DIR/cli/stubs,$MYPY_CONFIG_FILE_DIR/cli/src

# Avoid configuration issues
warn_unused_configs = True

# Import Discovery
ignore_missing_imports = False
follow_imports = normal

# Dynamic typing
disallow_subclassing_any = True
disallow_any_generics = False
disallow_any_unimported = True
disallow_any_expr = False
disallow_any_decorated = False
disallow_any_explicit = False

# Untyped definitions and calls

# different: why? (106 errors when enabled)
disallow_untyped_calls = False

# different: why? (782 errors when enabled)
disallow_untyped_defs = False

# different: why? (574 errors when enabled)
disallow_incomplete_defs = False

check_untyped_defs = True
disallow_untyped_decorators = True

# Implicit optional
no_implicit_optional = True

# Other warns
warn_redundant_casts = True

# different: when scanning test code, mypy will report '# type: ignore'
# comments found in application code incorrectly as unused even though
# they're necessary when running mypy on the application code directly.
# Disabling this setting prevents these incorrect reports
# (2 errors in tracing.py).
warn_unused_ignores = False

warn_return_any = True

# Ignore missing imports for third party libraries without type stubs
# Must have one entry per package
# Should reduce the size of this section as time goes on

[mypy-matplotlib.*]
ignore_missing_imports = True

[mypy-pandas]
ignore_missing_imports = True

[mypy-wcmatch.*]
ignore_missing_imports = True

[mypy-peewee]
ignore_missing_imports = True

[mypy-pydantic]
ignore_missing_imports = True

[mypy-pylsp_jsonrpc.*]
ignore_missing_imports = True

[mypy-semgrep.rule_match]
disallow_any_decorated = False
warn_return_any = False

[mypy-semgrep.pattern_match]
disallow_any_decorated = False
warn_return_any = False

[mypy-semgrep.formatter.*]
disallow_any_decorated = False
warn_return_any = False

[mypy-semgrep.commands.scan]
disallow_untyped_decorators = False
